
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.ztesoft.isap.server.webService.bnetV3;

import com.example.demo.util.Dom4jUtil;
import org.apache.log4j.Logger;
import org.dom4j.Document;
import org.dom4j.Element;
import org.springframework.stereotype.Component;

import javax.jws.WebService;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * This class was generated by Apache CXF 3.0.16
 * 2019-05-15T16:11:21.670+08:00
 * Generated source version: 3.0.16
 * 
 */

@WebService(
                      serviceName = "CrmForBnetV3Impl",
                      portName = "CrmForBnetV3ImplPort",
                      targetNamespace = "http://www.BNET.cn/v3.0/",
                     // wsdlLocation = "http://136.127.56.23:7080/NpiServer/services/CrmForBnetV3ImplPort?wsdl",
                      endpointInterface = "com.ztesoft.isap.server.webService.bnetV3.CrmForBnetV3")
@Component
public class CrmForBnetV3ImplPortImpl implements CrmForBnetV3 {
    private static Logger LOG = Logger.getLogger(CrmForBnetV3ImplPortImpl.class.getName());


    /* (non-Javadoc)
     * @see com.ztesoft.isap.server.webService.bnetV3.CrmForBnetV3#subApply(java.lang.String xmlString)*
     */
    public String subApply(String xmlString) {
        LOG.info("Executing operation subApply");
        System.out.println(xmlString);
        try {
            String _return = "";
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.ztesoft.isap.server.webService.bnetV3.CrmForBnetV3#createResponse(boolean isSuccess, java.lang.String transactionId)*
     */
    public String createResponse(boolean isSuccess, String transactionId) {
        LOG.info("Executing operation createResponse");
        System.out.println(isSuccess);
        System.out.println(transactionId);
        try {
            Element rspType = null;
            Element rspCode = null;
            Element rspDesc = null;

            Document doc = Dom4jUtil.createDocument();

            Element root = doc.addElement("Root");
            Element timeStamp = root.addElement("TimeStamp");
            Element transactionID = root.addElement("TransactionID");

            Element resultCode = root.addElement("ResultCode");
            Element resultMsg = root.addElement("ResultMsg");
            transactionID.setText(transactionId.substring(0, 14) + "02" + transactionId.substring(16));
            timeStamp.setText(new SimpleDateFormat("yyyyMMddHHssmm").format(new Date()));

            if (isSuccess) {
                resultCode.setText("00000");
                resultMsg.setText("success");
            } else {
                resultCode.setText("0601");
                resultMsg.setText("报文异常");
            }

            String docXml = doc.asXML();
            LOG.info("dep ack:\n" + docXml);

            String _return = docXml;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.ztesoft.isap.server.webService.bnetV3.CrmForBnetV3#dealResult(java.lang.String xmlString)*
     */
    public String dealResult(String xmlString) {
        LOG.info("Executing operation dealResult");
        System.out.println(xmlString);
        try {
            Document doc = null;
            String txId = "";
            String oldtxId = "";
            boolean isSuccess = true;
            String dep = "";
            try {
                doc = Dom4jUtil.createDOM4jDocument(xmlString, false, null);
                Element root = doc.getRootElement();
                txId = root.selectSingleNode("TransactionID").getText();
                oldtxId = root.selectSingleNode("OldTransactionID").getText();
                LOG.info(txId);
                String resCode = root.selectSingleNode(
                        "InvokeResult").getText();
                String resDesc = "";
                if (root.selectSingleNode(
                        "InvokeMsg") != null) {
                    resDesc = root.selectSingleNode(
                            "InvokeMsg").getText();
                }
                String bnetForNpi = oldtxId + "&" + resCode + "&" + resDesc + "&" + "1";
                LOG.info("bnetForNpi:" + bnetForNpi);
                //this.handler.handle(bnetForNpi);
            }
            catch (Exception e) {

                isSuccess = false;
            }
            LOG.info(xmlString);

            String result = createResponse(isSuccess, txId);
            String _return =result;
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
